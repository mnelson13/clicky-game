{"version":3,"sources":["components/EmployeeCard/EmployeeCard.js","components/Wrapper/Wrapper.js","App.js","index.js"],"names":["EmployeeCard","props","react_default","a","createElement","className","onClick","clickHandler","id","alt","name","src","image","Wrapper","state","employees","employeesList","chosenEmployees","score","topScore","text","shuffle","o","j","x","i","length","parseInt","Math","random","_this","setState","reset","winCheck","Object","toConsumableArray","concat","indexOf","_this2","this","map","employee","components_EmployeeCard_EmployeeCard","key","React","Component","App","components_Wrapper_Wrapper","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2ed2643d.chunk.js","sourcesContent":["import React from 'react';\nimport './EmployeeCard.css';\n\nconst EmployeeCard = props => (\n    <div className=\"card z-depth-5\">\n        <div className=\"card-image\">\n            <img onClick={() => props.clickHandler(props.id)} alt={props.name} src={props.image} />\n        </div>\n    </div>\n);\n\nexport default EmployeeCard;","import React from 'react';\nimport './Wrapper.css';\nimport employeesList from '../../employees.json';\nimport EmployeeCard from '../EmployeeCard';\n\nclass Wrapper extends React.Component {\n    state = {\n        employees: employeesList,\n        chosenEmployees: [],\n        score: 0,\n        topScore: 0,\n        text: \"Click an image to begin!\"\n    }\n\n    //shuffles images on page\n    shuffle = (o) => {\n        for(var j, x, i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n            this.setState({ employees: o});\n        \n    }\n\n    //resets scores and the chosenEmployees array\n    reset = () => {\n        if (this.state.score > this.state.topScore) {\n            this.setState({topScore: this.state.score})\n        }\n        this.setState({chosenEmployees: []})\n        this.setState({score: 0})\n    }\n\n    //checks if scores is greater than or equal to 12, updates text and restarts if true, \n    //runs shuffle function and sets text/chosenEmployees array if false\n    winCheck = (id) => {\n        if(this.state.score >= 12) {\n            this.setState({\n                text: \"You got them all!\"\n            }, () => {\n                this.reset();\n            })\n        } else {\n            this.shuffle(this.state.employees)\n            this.setState({text: \"You guessed correctly!\"})\n            this.setState({chosenEmployees: [...this.state.chosenEmployees, id]})\n        }\n    }\n\n    //on image click, checks if selected employee is already in the employee array,\n    //updates score if not in array and runs winCheck function,\n    //updates text and runs reset function if in array\n    clickHandler = id => {\n        if(this.state.chosenEmployees.indexOf(id) === -1 && this.state.score <12){\n            this.setState({\n                score: this.state.score +1\n            }, () => {\n                this.winCheck(id);\n            });\n        } else if(this.state.chosenEmployees.indexOf(id) !== -1){\n            this.setState({\n                text: \"You guessed incorrectly!\"\n            }, () => {\n                this.reset();\n            })\n        }\n    }\n\n    //renders page\n    render(){\n        return(\n            <div>\n\n                <div className=\"navbar-fixed\">\n                    <nav className=\"z-depth-5 orange lighten-1\">\n                        <div className=\"nav-wrapper\">\n                        <h5 className=\"brand-logo center navText\">{this.state.text}</h5>\n                        <ul className=\"left hide-on-med-and-down\">\n                            <li><h5 className=\"navText\">Clicky Game!</h5></li>\n                        </ul>\n                        <ul className=\"right hide-on-med-and-down\">\n                            <li><h5 className=\"navText\">Score: {this.state.score} | Top Score: {this.state.topScore}</h5></li>\n                        </ul>\n                        </div>\n                    </nav>\n                </div>\n\n                <div className=\"imgDiv\">\n                    <img alt=\"banner\" src=\"https://www.nbcstore.com/media/catalog/category/office-cat-banner.jpg\"></img>\n                    <h5>Click on an image to earn points,<br></br> but don't click on any more than once!</h5>\n                </div>\n\n                <div className=\"wrapper container\">\n                    {\n                        this.state.employees.map(\n                            employee => <EmployeeCard\n                            key={employee.id}\n                            id={employee.id}\n                            name={employee.name}\n                            image={employee.image}\n                            clickHandler={this.clickHandler}\n                            />\n                        )\n                    }\n                </div>\n                \n                <footer className=\"page-footer orange lighten-1\">\n                    <div className=\"footer-copyright orange lighten-1\">\n                        <div>\n                        <h5 className=\"footerText\">Clicky Game!</h5>\n                        </div>\n                    </div>\n                </footer>\n\n            </div>\n        )\n    }\n}\n\nexport default Wrapper;","import React from 'react';\nimport Wrapper from './components/Wrapper';\n\nconst App = () => <Wrapper/>\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}